{"version":3,"sources":["components/Header/UserInfo/index.tsx","context.js","components/Header/Theme/index.tsx","components/Header/index.tsx","icons/index.ts","components/Icon/index.tsx","components/Dialog/Item/index.tsx","components/Dialog/Title/index.tsx","components/Dialog/reducer.ts","data.js","components/Dialog/index.tsx","components/Dialog/helpers.ts","components/Sender/index.tsx","App.tsx","helpers/theme.ts","index.tsx"],"names":["UserInfo","className","AppContext","createContext","Theme","React","useContext","theme","toggleTheme","data-theme","onClick","event","currentTarget","dataset","size","Header","MessageReaded","MessageSended","Icon","name","Array","isArray","width","height","icons","icon","viewBox","classNames","dangerouslySetInnerHTML","__html","Item","isReverse","isRemovable","messages","avatar","onRemove","onRemoveHandle","id","Number","reverse","removable","src","alt","map","item","text","dayjs","date","format","status","data-id","extend","Calendar","Title","calendar","undefined","sameDay","lastWeek","sameElse","reducer","state","action","type","filter","message","payload","concat","Error","dialog","is","Dialog","newMessage","dialogRef","useRef","useReducer","data","dispatch","useEffect","setTimeout","current","scrollTop","scrollHeight","length","normalizedDialog","newDialog","forEach","i","diff","push","position","normalizeDialog","ref","key","Sender","onAddMessage","useState","value","setValue","onSubmit","preventDefault","Date","now","toISOString","placeholder","onChange","target","required","App","addMessage","localStorage","getItem","setItem","document","body","classList","add","remove","setTheme","Provider","WebFontLoader","load","google","families","locale","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6af7b7f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst UserInfo = () => (\r\n    <div className=\"user-info\">\r\n        <div className=\"name\">Ilezus Dev</div>\r\n        <div className=\"status\">\r\n            <span className=\"circle\" />В сети\r\n    </div>\r\n    </div>\r\n);\r\n\r\nexport default UserInfo;","import { createContext } from \"react\";\r\n\r\nexport const AppContext = createContext();","import React from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport { IoIosMoon, IoIosSunny } from \"react-icons/io\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Theme = () => {\r\n    const { theme, toggleTheme } = React.useContext(AppContext);\r\n\r\n    const onToggleTheme = (event: any) => {\r\n        const { theme } = event.currentTarget.dataset;\r\n        toggleTheme(theme);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"theme\"\r\n            data-theme={theme === \"light\" ? \"dark\" : \"light\"}\r\n            onClick={onToggleTheme}\r\n        >\r\n            {theme === \"light\" ? (\r\n                <IoIosMoon size={20} className=\"dark\" />\r\n            ) : (\r\n                    <IoIosSunny className=\"yellow\" size={20} />\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Theme;","import React from \"react\";\r\n\r\nimport UserInfo from \"./UserInfo\";\r\nimport Theme from \"./Theme\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <UserInfo />\r\n            <Theme />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","export const MessageReaded = [\r\n    `<path \r\n          d=\"M773.495 279.073l-61.528-61.528-276.876 276.876 61.528 61.528 276.876-276.876zM958.077 217.545l-461.46 465.855-184.584-184.584-61.528 61.528 246.112 246.112 527.383-527.383-65.923-61.528zM0 560.344l246.112 246.112 61.528-61.528-246.112-246.112-61.528 61.528z\"\r\n      />`,\r\n    \"0 0 1024 1024\",\r\n];\r\n\r\nexport const MessageSended = [\r\n    `<path \r\n          d=\"M958.077 217.545l-461.46 465.855-184.584-184.584-61.528 61.528 246.112 246.112 527.383-527.383-65.923-61.528zM0 560.344v0z\"\r\n      />`,\r\n    \"0 0 1024 1024\",\r\n];","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n// import PropTypes from \"prop-types\";\r\nimport * as icons from \"../../icons\";\r\n\r\nexport interface IProps {\r\n    name: string,\r\n    size?: number,\r\n    className?: string\r\n}\r\n\r\nconst Icon: React.FC<IProps> = ({ size = 20, name, className = \"\" }) => {\r\n    const [width, height] = Array.isArray(size) ? size : [size, size];\r\n    const [icon, viewBox] = icons[name];\r\n\r\n    return (\r\n        <svg\r\n            className={classNames(\"icon\", className)}\r\n            width={width}\r\n            height={height}\r\n            dangerouslySetInnerHTML={{ __html: icon }}\r\n            viewBox={viewBox}\r\n        />\r\n    );\r\n};\r\n\r\n// Icon.propTypes = {\r\n//     size: PropTypes.number,\r\n//     name: PropTypes.string.isRequired,\r\n//     className: PropTypes.string,\r\n// };\r\n\r\nexport default Icon;","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport dayjs from \"dayjs\";\r\nimport { IoIosTrash } from \"react-icons/io\";\r\nimport Icon from \"../../Icon\";\r\n\r\nimport \"./style.css\";\r\n\r\ninterface IMessage {\r\n    id: number,\r\n    text: string,\r\n    date: string,\r\n    status: \"sended\" | \"readed\"\r\n}\r\n\r\ninterface IProps {\r\n    isReverse: boolean,\r\n    isRemovable: boolean,\r\n    avatar: string,\r\n    messages: IMessage[],\r\n    onRemove: (id: number) => void\r\n}\r\n\r\nconst Item: React.FC<IProps> = ({ isReverse, isRemovable, messages, avatar, onRemove }) => {\r\n\r\n    const onRemoveHandle = (event: any) => {\r\n        const { id } = event.currentTarget.dataset;\r\n        onRemove(Number(id));\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\"item\", {\r\n                reverse: isReverse,\r\n                removable: isRemovable,\r\n            })}\r\n        >\r\n            <img src={avatar} className=\"avatar\" alt=\"Avatar\" />\r\n            <div className=\"list\">\r\n                {messages.map((item) => (\r\n                    <div className=\"list-item\" key={item.id}>\r\n                        <div className=\"text\">{item.text}</div>\r\n                        <div className=\"time\">{dayjs(item.date).format(\"HH:mm\")}</div>\r\n                        <Icon\r\n                            size={15}\r\n                            className=\"message-status\"\r\n                            name={\r\n                                item.status === \"sended\" ? \"MessageSended\" : \"MessageReaded\"\r\n                            }\r\n                        />\r\n                        <IoIosTrash\r\n                            data-id={item.id}\r\n                            size={18}\r\n                            className=\"remove-message\"\r\n                            onClick={onRemoveHandle}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Item.propTypes = {\r\n//     isReverse: PropTypes.bool.isRequired,\r\n//     isRemovable: PropTypes.bool.isRequired,\r\n//     avatar: PropTypes.string.isRequired,\r\n//     messages: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//             id: PropTypes.number.isRequired,\r\n//             text: PropTypes.string.isRequired,\r\n//             date: PropTypes.string.isRequired,\r\n//             status: PropTypes.oneOf([\"sended\", \"readed\"]),\r\n//         })\r\n//     ).isRequired,\r\n// };\r\n\r\nexport default Item;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport dayjs from \"dayjs\";\r\nimport Calendar from \"dayjs/plugin/calendar\";\r\n\r\nimport \"./style.css\";\r\n\r\ndayjs.extend(Calendar);\r\n\r\nconst Title: React.FC<{ date: any }> = ({ date }) => (\r\n    <div className=\"title\">\r\n        {dayjs(date).calendar(undefined, {\r\n            sameDay: \"[Сегодня]\",\r\n            lastWeek: \"DD MMMM\",\r\n            sameElse: \"DD MMMM YYYY\",\r\n        })}\r\n    </div>\r\n);\r\n\r\nTitle.propTypes = {\r\n    date: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Title;","export default function reducer(state: any, action: { type: string, payload?: any }) {\r\n    switch (action.type) {\r\n        case \"remove-message\":\r\n            return {\r\n                ...state,\r\n                messages: state.messages.filter(\r\n                    (message: any) => message.id !== action.payload\r\n                ),\r\n            };\r\n\r\n        case \"add-message\":\r\n            return {\r\n                ...state,\r\n                messages: state.messages.concat(action.payload),\r\n            };\r\n\r\n        case \"update-status\":\r\n            return {\r\n                ...state,\r\n                messages: state.messages.map((message: any) => {\r\n                    if (message.id === action.payload.id) {\r\n                        return {\r\n                            ...message,\r\n                            status: action.payload.status,\r\n                        };\r\n                    }\r\n\r\n                    return message;\r\n                }),\r\n            };\r\n\r\n        default:\r\n            throw new Error(\"Unknown action type\");\r\n    }\r\n}","const dialog = [\r\n    {\r\n        avatar:\r\n            \"https://sun9-2.userapi.com/c638729/v638729951/1d0ea/f9V7aJyh6tw.jpg\",\r\n        message: \"Привет\",\r\n        id: 0,\r\n        date: \"2020-10-11T10:09:04.712Z\",\r\n        is: \"her\",\r\n    },\r\n    {\r\n        avatar:\r\n            \"https://sun9-2.userapi.com/c638729/v638729951/1d0ea/f9V7aJyh6tw.jpg\",\r\n        message: \"Как дела?\",\r\n        id: 1,\r\n        date: \"2020-10-11T10:19:04.712Z\",\r\n        is: \"her\",\r\n    },\r\n    {\r\n        avatar:\r\n            \"https://sun9-2.userapi.com/c638729/v638729951/1d0ea/f9V7aJyh6tw.jpg\",\r\n        message: \"Я только приехал с Марса\",\r\n        id: 2,\r\n        date: \"2020-10-11T10:24:04.712Z\",\r\n        is: \"her\",\r\n    },\r\n    {\r\n        avatar:\r\n            \"https://sun9-58.userapi.com/c836638/v836638514/867c/SPMigNB8gw0.jpg\",\r\n        message: \"Привет! Все хорошо, ты как?\",\r\n        id: 3,\r\n        date: \"2020-10-11T11:09:04.712Z\",\r\n        status: \"sended\",\r\n        is: \"my\",\r\n    },\r\n    {\r\n        avatar:\r\n            \"https://sun9-58.userapi.com/c836638/v836638514/867c/SPMigNB8gw0.jpg\",\r\n        message: \"Ааа, да, я слышал\",\r\n        id: 4,\r\n        date: \"2020-10-11T12:09:04.712Z\",\r\n        status: \"sended\",\r\n        is: \"my\",\r\n    },\r\n    {\r\n        avatar:\r\n            \"https://sun9-58.userapi.com/c836638/v836638514/867c/SPMigNB8gw0.jpg\",\r\n        message: \"Круто\",\r\n        id: 5,\r\n        date: \"2020-10-11T13:01:04.712Z\",\r\n        status: \"readed\",\r\n        is: \"my\",\r\n    },\r\n    {\r\n        avatar:\r\n            \"https://sun9-58.userapi.com/c836638/v836638514/867c/SPMigNB8gw0.jpg\",\r\n        message: \"Полет нормальный?\",\r\n        id: 6,\r\n        date: \"2020-10-11T14:09:07.712Z\",\r\n        status: \"readed\",\r\n        is: \"my\",\r\n    },\r\n    {\r\n        avatar:\r\n            \"https://sun9-2.userapi.com/c638729/v638729951/1d0ea/f9V7aJyh6tw.jpg\",\r\n        message: \"Да, все круто. Только никому не говори)\",\r\n        id: 7,\r\n        date: \"2020-10-11T15:09:04.712Z\",\r\n        is: \"her\",\r\n    },\r\n];\r\n\r\nexport default dialog;","import React from \"react\";\r\n\r\nimport Item from \"./Item\";\r\nimport Title from \"./Title\";\r\n\r\nimport { normalizeDialog } from \"./helpers\";\r\nimport reducer from \"./reducer\";\r\nimport data from \"../../data\";\r\n\r\nimport \"./style.css\";\r\n\r\ninterface IProps {\r\n    newMessage?: any\r\n}\r\n\r\nconst Dialog: React.FC<IProps> = ({ newMessage }) => {\r\n    const dialogRef = React.useRef<HTMLDivElement>(null);\r\n    const [state, dispatch] = React.useReducer(reducer, {\r\n        messages: data,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (newMessage) {\r\n            dispatch({\r\n                type: \"add-message\",\r\n                payload: newMessage,\r\n            });\r\n\r\n            setTimeout(() => {\r\n                dispatch({\r\n                    type: \"update-status\",\r\n                    payload: {\r\n                        id: newMessage.id,\r\n                        status: \"readed\",\r\n                    },\r\n                });\r\n            }, 2000);\r\n        }\r\n    }, [newMessage]);\r\n\r\n    React.useEffect(() => {\r\n        if (dialogRef && dialogRef.current) {\r\n            dialogRef.current.scrollTop = dialogRef.current.scrollHeight;\r\n        }\r\n    }, [state.messages.length]);\r\n\r\n    const onRemove = (id: number) => {\r\n        dispatch({\r\n            type: \"remove-message\",\r\n            payload: id,\r\n        });\r\n    };\r\n\r\n    const normalizedDialog = normalizeDialog(state.messages);\r\n\r\n    return (\r\n        <div className=\"dialog\">\r\n            <div ref={dialogRef} className=\"overflow\">\r\n                {normalizedDialog.map((item) =>\r\n                    item.type === \"message\" ? (\r\n                        <Item {...item} key={item.id} onRemove={onRemove} />\r\n                    ) : (\r\n                            <Title key={item.id} date={item.date} />\r\n                        )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Dialog.propTypes = {\r\n//     newMessage: PropTypes.shape({\r\n//         id: PropTypes.number,\r\n//     }),\r\n// };\r\n\r\nexport default Dialog;","import dayjs from \"dayjs\";\r\n\r\nexport const normalizeDialog = (dialog: any) => {\r\n    const newDialog: any[] = [];\r\n\r\n    dialog.forEach((item: any, i: number) => {\r\n        if (i === 0 || dialog[i - 1]) {\r\n            const first = dayjs((i === 0 ? item : dialog[i - 1]).date);\r\n            const diff = first.diff(item.date, \"day\");\r\n\r\n            if (i === 0 || diff) {\r\n                newDialog.push({\r\n                    type: \"title\",\r\n                    id: `item-title-${item.id}`,\r\n                    date: item.date,\r\n                });\r\n            }\r\n        }\r\n\r\n        if (i === 0 || item.is !== dialog[i - 1].is) {\r\n            newDialog.push({\r\n                type: \"message\",\r\n                id: `item-message-${item.id}`,\r\n                avatar: item.avatar,\r\n                isReverse: item.is === \"my\",\r\n                isRemovable: item.is === \"my\",\r\n                messages: [\r\n                    {\r\n                        text: item.message,\r\n                        status: item.status,\r\n                        id: item.id,\r\n                        date: item.date,\r\n                    },\r\n                ],\r\n            });\r\n        } else {\r\n            const position = newDialog.length - 1;\r\n\r\n            newDialog[position] = {\r\n                ...newDialog[position],\r\n                messages: newDialog[position].messages.concat({\r\n                    text: item.message,\r\n                    status: item.status,\r\n                    id: item.id,\r\n                    date: item.date,\r\n                }),\r\n            };\r\n        }\r\n    });\r\n\r\n    return newDialog;\r\n};","import React, { useState } from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\ninterface IProps {\r\n    onAddMessage: (item: any) => void\r\n}\r\n\r\nconst Sender: React.FC<IProps> = ({ onAddMessage }) => {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const onChange = (event: any) => setValue(event.target.value);\r\n    const onSubmit = (event: any) => {\r\n        event.preventDefault();\r\n\r\n        onAddMessage({\r\n            id: Date.now(),\r\n            avatar:\r\n                \"https://sun9-58.userapi.com/c836638/v836638514/867c/SPMigNB8gw0.jpg\",\r\n            message: value,\r\n            date: new Date().toISOString(),\r\n            is: \"my\",\r\n            status: \"sended\",\r\n        });\r\n        setValue(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"sender\" onSubmit={onSubmit}>\r\n            <input\r\n                placeholder=\"Введите сообщение\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required\r\n            />\r\n            <button>Отправить</button>\r\n        </form>\r\n    );\r\n};\r\n\r\n// Sender.propTypes = {\r\n//     onAddMessage: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Sender;","import React, { createContext } from 'react';\n\nimport Header from \"./components/Header\";\nimport Dialog from \"./components/Dialog\";\nimport Sender from \"./components/Sender\";\n\nimport { AppContext } from \"./context\";\nimport { getTheme, setTheme } from \"./helpers/theme\";\n\nfunction App() {\n  const [message, addMessage] = React.useState(null);\n  const [theme, toggleTheme] = React.useState(getTheme());\n\n  React.useEffect(() => {\n    setTheme(theme)\n  }, [theme])\n\n  return (\n    <AppContext.Provider\n      value={{\n        theme,\n        toggleTheme,\n      }}\n    >\n      <div className=\"container\">\n        <Header />\n        <Dialog newMessage={message} />\n        <Sender onAddMessage={addMessage} />\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","export const getTheme = () => {\r\n    return localStorage.getItem(\"application-theme\") || \"dark\";\r\n};\r\n\r\nexport const setTheme = (theme: string) => {\r\n    localStorage.setItem(\"application-theme\", theme);\r\n\r\n    if (theme === \"dark\") {\r\n        document.body.classList.add(\"dark\");\r\n        document.body.classList.remove(\"light\");\r\n    } else {\r\n        document.body.classList.add(\"light\");\r\n        document.body.classList.remove(\"dark\");\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WebFontLoader from \"webfontloader\";\nimport dayjs from \"dayjs\";\n\nimport App from './App';\n\nimport './css/index.css';\nimport \"dayjs/locale/ru\";\n\nWebFontLoader.load({\n  google: {\n    families: [\"Open Sans:300,400,700\"],\n  },\n});\n\ndayjs.locale(\"ru\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}